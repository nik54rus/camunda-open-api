<?php
/**
 * HistoricDetailQueryDtoTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Camunda\Client
 * @author   Nik54rus
 * @link     https://github.com/nik54rus/camunda-open-api
 */

/**
 * Camunda Platform REST API
 *
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.21.1-ee
 * 
 * Generated by: https://github.com/nik54rus/camunda-open-api.git
 * Camunda Codegen version: 3.0.56
 */
/**
 * NOTE: This class is auto generated by the Camunda code generator program.
 * https://github.com/nik54rus/camunda-open-api
 * Please update the test case below to test the model.
 */

namespace Camunda\Client;

use PHPUnit\Framework\TestCase;

/**
 * HistoricDetailQueryDtoTest Class Doc Comment
 *
 * @category    Class
 * @description A historic detail query which defines a group of historic details.
 * @package     Camunda\Client
 * @author      Camunda Codegen team
 * @link        https://github.com/nik54rus/camunda-open-api
 */
class HistoricDetailQueryDtoTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "HistoricDetailQueryDto"
     */
    public function testHistoricDetailQueryDto()
    {
    }

    /**
     * Test attribute "process_instance_id"
     */
    public function testPropertyProcessInstanceId()
    {
    }

    /**
     * Test attribute "process_instance_id_in"
     */
    public function testPropertyProcessInstanceIdIn()
    {
    }

    /**
     * Test attribute "execution_id"
     */
    public function testPropertyExecutionId()
    {
    }

    /**
     * Test attribute "task_id"
     */
    public function testPropertyTaskId()
    {
    }

    /**
     * Test attribute "activity_instance_id"
     */
    public function testPropertyActivityInstanceId()
    {
    }

    /**
     * Test attribute "case_instance_id"
     */
    public function testPropertyCaseInstanceId()
    {
    }

    /**
     * Test attribute "case_execution_id"
     */
    public function testPropertyCaseExecutionId()
    {
    }

    /**
     * Test attribute "variable_instance_id"
     */
    public function testPropertyVariableInstanceId()
    {
    }

    /**
     * Test attribute "variable_type_in"
     */
    public function testPropertyVariableTypeIn()
    {
    }

    /**
     * Test attribute "tenant_id_in"
     */
    public function testPropertyTenantIdIn()
    {
    }

    /**
     * Test attribute "without_tenant_id"
     */
    public function testPropertyWithoutTenantId()
    {
    }

    /**
     * Test attribute "user_operation_id"
     */
    public function testPropertyUserOperationId()
    {
    }

    /**
     * Test attribute "form_fields"
     */
    public function testPropertyFormFields()
    {
    }

    /**
     * Test attribute "variable_updates"
     */
    public function testPropertyVariableUpdates()
    {
    }

    /**
     * Test attribute "exclude_task_details"
     */
    public function testPropertyExcludeTaskDetails()
    {
    }

    /**
     * Test attribute "initial"
     */
    public function testPropertyInitial()
    {
    }

    /**
     * Test attribute "occurred_before"
     */
    public function testPropertyOccurredBefore()
    {
    }

    /**
     * Test attribute "occurred_after"
     */
    public function testPropertyOccurredAfter()
    {
    }

    /**
     * Test attribute "sorting"
     */
    public function testPropertySorting()
    {
    }
}
